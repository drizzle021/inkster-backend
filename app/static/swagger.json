{
    "openapi": "3.0.0",
    "info":{
        "title": "Inkster",
        "version": "1.0.0",
        "description": "Inkster is a platform for users to share, discover, and interact with illustrations, novels, and manga. This API provides endpoints for authentication, post management, reporting, and user interactions."    },
    "tags": [
        {
            "name": "auth",
            "description": "Authentication related endpoints"
        },
        {
            "name": "posts",
            "description": "Post management"
        },
        {
            "name": "reports",
            "description": "Report management"
        },
        {
            "name": "users",
            "description": "User management"
        },
        {
            "name": "map",
            "description": "Map management"
        }
        
    ],
    "components": {
        "securitySchemes": {
            "bearerAuth": {
            "type": "http",
            "scheme": "bearer",
            "bearerFormat": "JWT"
            }
        }
    },
    "paths": {
        "/auth/register": {
            "post": {
                "tags": ["auth"],
                "summary": "Register new User",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "username": {
                                    "type": "string",
                                    "description": "chosen username",
                                    "example": "test_user"
                                },
                                "email": {
                                    "type": "string",
                                    "format": "email",
                                    "description": "chosen email",
                                    "example": "test_user@example.com"
                                },
                                "password": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "chosen password",
                                    "example": "securepassword"
                                }
                            },
                            "required": ["username", "email", "password"]
                        }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successfully registered User"

                    },
                    "400": {
                        "description": "Missing required field(s)"

                    },
                    "409": {
                        "description": "Username or Email already exists"

                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "tags": ["auth"],
                "summary": "Login User",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "email": {
                                    "type": "string",
                                    "format": "email",
                                    "description": "registered email",
                                    "example": "test_user@example.com"
                                },
                                "password": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "registered password",
                                    "example": "securepassword"
                                }
                            },
                            "required": ["email", "password"]
                        }
                        }
                    }
                },

                "responses": {
                    "200": {
                        "description": "User successfully authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "access_token": {
                                            "type": "string",
                                            "description": "JWT token for authenticated user"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Missing required field(s)"

                    },
                    "401": {
                        "description": "Invalid email or password"

                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "tags": ["auth"],
                "summary": "Logout User",
                "description": "Invalidates the user's token or ends the session.",
                "security": [
                    {
                      "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User successfully logged out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "access_token": {
                                            "type": "string",
                                            "description": "Logged out successfully"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"

                    }
                }
            }
        },
        "/posts": {
            "get": {
                "tags": ["posts"],
                "summary": "Returns all Posts (optionally filtered)",
                "description": "Returns a list of posts. Supports optional filtering by keywords, post_type, and tags.",
                "security": [
                  {
                    "bearerAuth": []
                  }
                ],
                "parameters": [
                  {
                    "name": "keywords",
                    "in": "query",
                    "description": "Search text within title or caption",
                    "required": false,
                    "schema": {
                      "type": "string"
                    }
                  },
                  {
                    "name": "post_type",
                    "in": "query",
                    "description": "Filter by post type",
                    "required": false,
                    "schema": {
                      "type": "string",
                      "enum": ["ILLUSTRATION", "NOVEL", "MANGA"]
                    }
                  },
                  {
                    "name": "tags",
                    "in": "query",
                    "description": "Comma-separated tag names to filter posts by",
                    "required": false,
                    "schema": {
                      "type": "string",
                      "example": "fantasy,cute,magic"
                    }
                  }
                ],
                "responses": {
                  "200": {
                    "description": "List of posts",
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "title": {
                                    "type": "string",
                                    "example": "My Art"
                                },
                                "post_type": {
                                    "type": "string",
                                    "example": "ILLUSTRATION"
                                },
                                "caption": {
                                    "type": "string",
                                    "example": "A nice drawing"
                                },
                                "description": {
                                    "type": "string",
                                    "example": "This is an illustration I made"
                                },
                                "is_spoilered": {
                                    "type": "boolean",
                                    "example": false
                                },
                                "software": {
                                    "type": "string",
                                    "example": "Photoshop"
                                },
                                "author": {
                                    "type": "integer",
                                    "example": 5
                                },
                                "tags": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "example": "fantasy"
                                    },
                                    "example": ["fantasy", "digital", "dragon"]
                                }
                            }
                          }
                        }
                      }
                    }
                  },
                  "401": {
                    "description": "Unauthorized"
                  },
                  "400": {
                    "description": "Invalid parameters"
                  }
                }
            },
            "post": {
                "tags": ["posts"],
                "summary": "Create new Post",
                "security": [
                    {
                      "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "description": "chosen title",
                                        "example": "title_of_post"
                                    },
                                    "post_type": {
                                        "type": "string",
                                        "description": "chosen type of post",
                                        "example": "ILLUSTRATION",
                                        "enum": ["ILLUSTRATION", "NOVEL", "MANGA"]
                                    },
                                    "caption": {
                                        "type": "string",
                                        "description": "chosen caption",
                                        "example": "caption_of_post"
                                    },
                                    "description": {
                                        "type": "string",
                                        "description": "chosen description",
                                        "example": "description_of_post"
                                    },
                                    "is_spoilered": {
                                        "type": "boolean",
                                        "description": "whether the post is marked as a spoiler",
                                        "example": true
                                    },
                                    "software": {
                                        "type": "string",
                                        "description": "chosen software",
                                        "example": "paint"
                                    },
                                    "tags": {
                                        "type": "array",
                                        "description": "List of tags for the post (comma-separated or repeated)",
                                        "items": {
                                            "type": "string",
                                            "example": "happy"
                                        },
                                        "example": ["happy", "fun", "sketch"]
                                    },
                                    "images": {
                                        "type": "array",
                                        "description": "List of image files to be uploaded",
                                        "items": {
                                            "type": "string",
                                            "format": "binary",
                                            "example": "example.jpg"
                                        }
                                    }
                                },
                                "required": ["title", "post_type", "caption", "is_spoilered"]
                            }
                        }
                    }
                },

                "responses": {
                    "201": {
                        "description": "Successfully created Post"

                    },
                    "400": {
                        "description": "Missing required field(s)"

                    },
                    "401": {
                        "description": "Unauthorized"

                    },
                    "413": {
                        "description": "File size exceeds limit"

                    }
                }
            }
        },
        "/posts/{id}": {
            "get": {
                "tags": ["posts"],
                "summary": "Returns Post with ID",
                "security": [
                    {
                      "bearerAuth": []
                    }
                ],

                "parameters":[
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID for the Post",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Post",
                        "content":{
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties":{
                                        "id": {
                                            "type": "integer", 
                                            "format": "int64",
                                            "example": 1
                                        },
                                        "title": {
                                            "type": "string",
                                            "description": "chosen title",
                                            "example": "title_of_post"
                                        },
                                        "post_type": {
                                            "type": "string",
                                            "description": "chosen type of post",
                                            "example": "ILLUSTRATION",
                                            "enum": ["ILLUSTRATION", "NOVEL", "MANGA"]
                                        },
                                        "caption": {
                                            "type": "string",
                                            "description": "chosen caption",
                                            "example": "title_of_post"
                                        },
                                        "description": {
                                            "type": "string",
                                            "description": "chosen description",
                                            "example": "description_of_post"
                                        },
                                        "is_spoilered": {
                                            "type": "boolean",
                                            "description": "whether the post is marked as a spoiler",
                                            "example": true
                                        },
                                        "software": {
                                            "type": "string",
                                            "description": "chosen software",
                                            "example": "paint"
                                        },
                                        "author_id":{
                                            "type":"integer",
                                            "example": 4
                                        },
                                        "author":{
                                            "type":"object",
                                            "properties":{
                                                "id": {
                                                    "type":"integer",
                                                    "example": "4"
                                                },
                                                "username": {
                                                    "type":"string",
                                                    "example": "test_user"
                                                },
                                                "profile_picture": {
                                                    "type":"string",
                                                    "example": "8xVzS-1XSmeMBlY4sxc4Sg_20250408T030158.jpg"
                                                },
                                                "date_joined": {
                                                    "type":"string",
                                                    "example": "Fri, 11 Apr 2025 18:44:12 GMT"
                                                }
                                            }
                                        },
                                        "tags":{
                                            "type": "array",
                                            "items":{
                                                "type":"string",
                                                "example":"digital_art"
                                            }
                                        },
                                        "likes":{
                                            "type":"integer",
                                            "description": "The number of likes on the post",
                                            "example": 2000
                                        },
                                        "comments":{
                                            "type":"integer",
                                            "description": "The number of comments on the post",
                                            "example": 300
                                        },
                                        "images":{
                                            "type":"array",
                                            "items":{
                                                "type":"object",
                                                "properties":{
                                                    "id":{
                                                        "type":"integer",
                                                        "example":4
                                                    },
                                                    "position":{
                                                        "type":"integer",
                                                        "description": "The position of the image on the carousel",
                                                        "example": 1
                                                    },
                                                    "image_name":{
                                                        "type":"string",
                                                        "example":"8xVzS-1XSmeMBlY4sxc4Sg_20250408T030158.jpg"
                                                    }
                                                }
                                            }
                                        }
                                        
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"

                    },
                    "404": {
                        "description": "Post not found"

                    }
                }
            },
            "delete": {
                "tags": ["posts"],
                "summary": "Deletes Post with ID",
                "security": [
                    {
                      "bearerAuth": []
                    }
                ],
                "parameters":[
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID for the Post",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Post deleted successfully"

                    },
                    "401": {
                        "description": "Unauthorized"

                    },
                    "404": {
                        "description": "Post not found"

                    }
                }
            },
            "put": {
                "tags": ["posts"],
                "summary": "Edits a Post with ID",
                "security": [
                    {
                    "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                    "name": "id",
                    "in": "path",
                    "description": "ID of the post to edit",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                    "application/x-www-form-urlencoded": {
                        "schema": {
                        "type": "object",
                        "properties": {
                            "title": {
                            "type": "string",
                            "description": "New title for the post"
                            },
                            "caption": {
                            "type": "string",
                            "description": "New caption for the post"
                            },
                            "description": {
                            "type": "string",
                            "description": "Updated description"
                            },
                            "software": {
                            "type": "string",
                            "description": "Updated software info"
                            },
                            "is_spoilered": {
                            "type": "boolean",
                            "description": "Whether the post is marked as a spoiler"
                            },
                            "tags": {
                            "type": "string",
                            "description": "Comma-separated list of tags to assign to the post",
                            "example": "happy,fun,sketch"
                            }
                        }
                        }
                    }
                    }
                },
                "responses": {
                    "200": {
                    "description": "Post updated successfully",
                    "content": {
                        "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                            "message": {
                                "type": "string",
                                "example": "Post updated successfully"
                            }
                            }
                        }
                        }
                    }
                    },
                    "401": {
                    "description": "Unauthorized"
                    },
                    "404": {
                    "description": "Post not found"
                    }
                }
            }
        },
        "/posts/report/{id}": {
            "post": {
                "tags": ["posts"],
                "summary": "Creates a Report for a Post with ID",
                "security": [
                    {
                      "bearerAuth": []
                    }
                ],
                "parameters":[
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID for the Post",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "report_type": {
                                        "type": "string",
                                        "description": "chosen type of report",
                                        "example": "HATE",
                                        "enum": ["HATE", "ABUSE", "VIOLENT", "PRIVACY", "SPAM", "IMPERSONATION"]
                                    },
                                    "description": {
                                        "type": "string",
                                        "description": "chosen description",
                                        "example": "description_of_report"
                                    }
                                },
                                "required": ["report_type", "description"]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successfully created Report"

                    },
                    "400": {
                        "description": "Missing required field(s)"

                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Post not Found"

                    }
                }
            }
        },
        "/posts/like/{id}": {
            "post": {
                "tags": ["posts"],
                "summary": "Likes or unlike a Post with the given ID",
                "description": "Allows an authenticated user to like or unlike a specific post. A post can only be liked once by the same user.",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the post to like",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Post liked or unliked",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "message": {
                                            "type": "string",
                                            "example": "Post liked"
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "message": {
                                            "type": "string",
                                            "example": "Post unliked"
                                          }
                                        }
                                      }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Post not found"
                    }
                    
                }
            }
        },
        "/posts/save/{id}": {
            "post": {
                "tags": ["posts"],
                "summary": "Save or unsave a post with the given ID",
                "description": "Saves or unsaves the specified post to the logged-in user's saved posts.",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the post to save",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Post saved or unsaved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "message": {
                                            "type": "string",
                                            "example": "Post saved"
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "message": {
                                            "type": "string",
                                            "example": "Post unsaved"
                                          }
                                        }
                                      }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Post not found"
                    }
                    
                }
            }
        },
        "/posts/comments/{id}": {
            "get": {
                "tags": ["posts"],
                "summary": "Get comments for a Post with ID",
                "description": "Retrieves all comments associated with a specific post.",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the post",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of comments",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "content": {
                                                "type": "string",
                                                "example": "This is a great post!"
                                            },
                                            "author_id": {
                                                "type": "integer",
                                                "example": 3
                                            },
                                            "author":{
                                                    "type":"object",
                                                    "properties":{
                                                        "id": {
                                                            "type":"integer",
                                                            "example": "4"
                                                        },
                                                        "username": {
                                                            "type":"string",
                                                            "example": "test_user"
                                                        },
                                                        "profile_picture": {
                                                            "type":"string",
                                                            "example": "8xVzS-1XSmeMBlY4sxc4Sg_20250408T030158.jpg"
                                                        },
                                                        "date_joined": {
                                                            "type":"string",
                                                            "example": "Fri, 11 Apr 2025 18:44:12 GMT"
                                                        }
                                                    }
                                            },
                                            "post_id": {
                                                "type": "integer",
                                                "example": 3
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "example": "Fri, 11 Apr 2025 18:44:12 GMT"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Post not found"
                    }
                }
            },
            "post": {
                "tags": ["posts"],
                "summary": "Add a comment to a Post with ID",
                "description": "Allows an authenticated user to comment on a specific post.",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the post to comment on",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "content": {
                                        "type": "string",
                                        "description": "Content of the comment",
                                        "example": "I love this post!"
                                    }
                                },
                                "required": ["content"]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Comment added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Comment added successfully"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Missing or empty comment content"
                    },
                    "404": {
                        "description": "Post not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/posts/image/{name}": {
            "get": {
                "tags": ["posts"],
                "summary": "Get an image on a specific positon from a post.",
                "description": "",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "name of image",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Image successfully retrieved",
                        "content": {
                            "image/png": {
                                "schema": {
                                    "type": "object",
                                    "format": "binary"
                                }
                            },
                            "image/jpeg": {
                                "schema": {
                                    "type": "object",
                                    "format": "binary"
                                }
                            },
                            "image/jpg": {
                                "schema": {
                                    "type": "object",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Image not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/reports": {
            "get": {
                "tags": ["reports"],
                "summary": "Returns all Reports (optionally filtered by status)",
                "description": "Retrieves all reports. Optionally filter by status (PENDING, ACCEPTED, DENIED).",
                "security": [
                {
                    "bearerAuth": []
                }
                ],
                "parameters": [
                {
                    "name": "status",
                    "in": "query",
                    "description": "Filter reports by their status",
                    "required": false,
                    "schema": {
                    "type": "string",
                    "enum": ["PENDING", "ACCEPTED", "DENIED"]
                    }
                }
                ],
                "responses": {
                "200": {
                    "description": "List of reports",
                    "content": {
                    "application/json": {
                        "schema": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                            "id": {
                                "type": "integer",
                                "example": 1
                            },
                            "post_id": {
                                "type": "integer",
                                "example": 12
                            },
                            "report_type": {
                                "type": "string",
                                "example": "HATE"
                            },
                            "status": {
                                "type": "string",
                                "example": "PENDING"
                            }
                            }
                        }
                        }
                    }
                    }
                },
                "400": {
                    "description": "Invalid status value"
                },
                "401": {
                    "description": "Unauthorized"
                }
                }
            }
        },
        "/reports/{id}": {
            "get": {
                "tags": ["reports"],
                "summary": "Returns a Report with ID",
                "parameters":[
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Report",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "security": [
                    {
                      "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Report",
                        "content":{
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties":{
                                        "id": {
                                            "type": "integer", 
                                            "format": "int64",
                                            "example": 1
                                        },
                                        "post_id": {
                                            "type": "integer", 
                                            "format": "int64",
                                            "example": 1
                                        },
                                        "report_type": {
                                            "type": "string",
                                            "example": "HATE"

                                        },
                                        "description": {
                                            "type": "string",
                                            "example": "description_of_report"

                                        },
                                        "post":{
                                            "type":"object",
                                            "properties":{
                                                "title": {
                                                    "type":"string",
                                                    "example": "title_of_post"
                                                },
                                                "caption": {
                                                    "type":"string",
                                                    "example": "caption_of_post"
                                                },
                                                "description": {
                                                    "type":"string",
                                                    "example": "description_of_post"
                                                },
                                                "tags":{
                                                    "type": "array",
                                                    "items":{
                                                        "type":"string",
                                                        "example":"digital_art"
                                                    }
                                                },
                                                "author":{
                                                    "type":"object",
                                                    "properties":{
                                                        "id": {
                                                            "type":"integer",
                                                            "example": "4"
                                                        },
                                                        "username": {
                                                            "type":"string",
                                                            "example": "test_user"
                                                        },
                                                        "profile_picture": {
                                                            "type":"string",
                                                            "example": "8xVzS-1XSmeMBlY4sxc4Sg_20250408T030158.jpg"
                                                        },
                                                        "date_joined": {
                                                            "type":"string",
                                                            "example": "Fri, 11 Apr 2025 18:44:12 GMT"
                                                        }
                                                    }
                                                },
                                                "created_at":{
                                                    "type":"string",
                                                    "example": "Fri, 11 Apr 2025 18:44:54 GMT"
                                                }
                                            }
                                            
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "User not found"

                    }
                }
            }
        },
        "/reports/ignore/{id}": {
            "post": {
                "summary": "Mark a report as ignored",
                "description": "Marks a report as resolved without removing the post.",
                "tags": ["reports"],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                        "type": "integer"
                        },
                        "description": "ID of the report to ignore"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Report marked as ignored",
                        "content": {
                        "application/json": {
                            "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                "type": "string",
                                "example": "Report ignored successfully"
                                }
                            }
                            }
                        }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Report or Post not found"
                    }
                }
            }
        },
        "/reports/remove-post/{id}": {
            "post": {
                "summary": "Remove a reported post",
                "description": "Removes a post that has been reported and marks the report as resolved.",
                "tags": ["reports"],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                        "type": "integer"
                        },
                        "description": "ID of the report whose post should be removed"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Post removed and report resolved",
                        "content": {
                        "application/json": {
                            "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                "type": "string",
                                "example": "Post removed and report resolved"
                                }
                            }
                            }
                        }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Report or Post not found"
                    }
                }
            }
        },
        "/users": {
            "get": {
                "tags": ["users"],
                "summary": "Returns all Users",

                "responses": {
                    "200": {
                        "description": "Users",
                        "content":{
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties":{
                                            "id": {
                                                "type": "integer", 
                                                "format": "int64",
                                                "example": 1
                                            },
                                            "username": {
                                                "type": "string", 
                                                "example": "test_user"
                                            },
                                            "email": {
                                                "type": "string",
                                                "format": "email", 
                                                "example": "test_user@example.com"
                                            }
                                        }                                        
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "tags": ["users"],
                "summary": "Returns User with ID",
                "parameters":[
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the User to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "security": [
                    {
                      "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The data of the currently logged in user",
                        "content":{
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties":{
                                        "id": {
                                            "type": "integer", 
                                            "format": "int64",
                                            "example": 1
                                        },
                                        "username": {
                                            "type": "string", 
                                            "example": "test_user"
                                        },
                                        "email": {
                                            "type": "string",
                                            "format": "email", 
                                            "example": "test_user@example.com"
                                        },
                                        "profile_picture": {
                                            "type": "string",
                                            "example": "avatar.png"
                                        },
                                        "banner_picture": {
                                            "type": "string",
                                            "example": "banner.png"
                                        },
                                        "posts": {
                                            "type": "array",
                                            "description": "List of posts created by the user",
                                            "items": {
                                                "type": "object",
                                                "example": {
                                                    "id": 1,
                                                    "title": "title_of_post",
                                                    "post_type": "ILLUSTRATION",
                                                    "caption": "caption_of_post",
                                                    "description":  "description_of_post",
                                                    "is_spoilered": false,
                                                    "software": "Clip Studio Paint",
                                                    "created_at": "Thu, 10 Apr 2025 10:12:05 GMT"
                                                }
                                            }
                                        },
                                        "tags":{
                                            "type": "array",
                                            "items":{
                                                "type":"string",
                                                "example":"digital_art"
                                            }
                                        },
                                        "followers":{
                                            "type":"integer",
                                            "example": 102
                                        },
                                        "following":{
                                            "type": "integer",
                                            "example": 232
                                        }

                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "User not found"

                    }
                }
            }
        },
        "/users/me": {
            "get": {
                "tags": ["users"],
                "summary": "Returns the currently logged in user",
                "security": [
                    {
                      "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The data of the currently logged in user",
                        "content":{
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties":{
                                        "id": {
                                            "type": "integer", 
                                            "format": "int64",
                                            "example": 1
                                        },
                                        "username": {
                                            "type": "string", 
                                            "example": "test_user"
                                        },
                                        "email": {
                                            "type": "string",
                                            "format": "email", 
                                            "example": "test_user@example.com"
                                        },
                                        "profile_picture": {
                                            "type": "string",
                                            "example": "avatar.png"
                                        },
                                        "banner_picture": {
                                            "type": "string",
                                            "example": "banner.png"
                                        },
                                        "posts": {
                                            "type": "array",
                                            "description": "List of posts created by the user",
                                            "items": {
                                                "type": "object",
                                                "example": {
                                                    "id": 1,
                                                    "title": "title_of_post",
                                                    "post_type": "ILLUSTRATION",
                                                    "caption": "caption_of_post",
                                                    "description":  "description_of_post",
                                                    "is_spoilered": false,
                                                    "software": "Clip Studio Paint",
                                                    "created_at": "Thu, 10 Apr 2025 10:12:05 GMT"
                                                }
                                            }
                                        },
                                        "tags":{
                                            "type": "array",
                                            "items":{
                                                "type":"string",
                                                "example":"digital_art"
                                            }
                                        },
                                        "followers":{
                                            "type":"integer",
                                            "example": 102
                                        },
                                        "following":{
                                            "type": "integer",
                                            "example": 232
                                        }

                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "User not found"

                    }
                }
            }
        },
        "/users/follow/{id}": {
            "post": {
                "tags": ["users"],
                "summary": "Follows or unfollows a User",
                "security": [
                    {
                      "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of user to follow",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Followed or unfollowed successfully."
                    },
                    "400": {
                        "description": "User can't follow themselves"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "User not found"

                    }
                }
            }
        },
        "/users/saved": {
            "get": {
                "tags": ["users"],
                "summary": "Get saved posts for logged-in user",
                "description": "Returns a list of posts the logged-in user has saved.",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of saved posts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 12
                                            },
                                            "title": {
                                                "type": "string",
                                                "example": "Saved Post Title"
                                            },
                                            "caption": {
                                                "type": "string",
                                                "example": "A short caption"
                                            },
                                            "is_spoilered": {
                                                "type": "boolean",
                                                "example": true
                                            },
                                            "description": {
                                                "type": "string",
                                                "example": "Saved Post Description"
                                            },
                                            "thumbnail": {
                                                "type": "string",
                                                "example": "8xVzS-1XSmeMBlY4sxc4Sg_20250408T030158.jpg"
                                            },
                                            "author_id": {
                                                "type": "integer",
                                                "example": 4
                                            },
                                            "author": {
                                                "type": "object",
                                                "properties":{
                                                    "id":{
                                                        "type": "integer",
                                                        "example": 4
                                                    },
                                                    "username":{
                                                        "type": "string",
                                                        "example": "test_user"
                                                    },
                                                    "profile_picture":{
                                                        "type": "string",
                                                        "example": "8xVzS-1XSmeMBlY4sxc4Sg_20250408T030158.jpg"
                                                    },
                                                    "date_joined":{
                                                        "type": "string",
                                                        "example": "Thu, 10 Apr 2025 10:12:05 GMT"
                                                    }
                                                }
                                            },
                                            "saved_at": {
                                                "type": "string",
                                                "example": "Thu, 10 Apr 2025 10:12:05 GMT"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "example": "Thu, 10 Apr 2025 10:12:05 GMT"
                                            }
                                            
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/users/update-pictures": {
            "put": {
                "tags": ["users"],
                "summary": "Update user pictures",
                "description": "Updates the user's profile with the uploaded profile picture or/and banner",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "description": "Upload user profile picture and/or banner",
                    "required": true,
                    "content": {
                      "multipart/form-data": {
                        "schema": {
                          "type": "object",
                          "properties": {
                            "profile_picture": {
                              "type": "string",
                              "format": "binary",
                              "description": "Upload profile picture file"
                            },
                            "banner": {
                              "type": "string",
                              "format": "binary",
                              "description": "Upload banner file"
                            }
                          }
                        }
                      }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Profile successfully updated"
                    },
                    "400": {
                        "description": "Missing required files or invalid format"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Possible failure of uploads"
                    }
                }
            }
        },
        "/users/update-tags": {
            "put": {
                "tags": ["users"],
                "summary": "Update tags for the current user",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "tags": {
                                        "type": "string",
                                        "description": "Comma-separated tags to assign to the user",
                                        "example": "digital art,cute,dark"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User tags updated successfully",
                        "content": {
                        "application/json": {
                            "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                "type": "string",
                                "example": "User tags updated successfully"
                                }
                            }
                            }
                        }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/users/image/{name}": {
            "get": {
                "tags": ["users"],
                "summary": "Get an image of a user.",
                "description": "",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "name of image",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Image successfully retrieved",
                        "content": {
                            "image/png": {
                                "schema": {
                                    "type": "object",
                                    "format": "binary"
                                }
                            },
                            "image/jpeg": {
                                "schema": {
                                    "type": "object",
                                    "format": "binary"
                                }
                            },
                            "image/jpg": {
                                "schema": {
                                    "type": "object",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Image not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/map/nearby-exhibitions": {
            "get": {
                "tags": ["map"],
                "summary": "Get nearby exhibitions",
                "description": "Fetches nearby art galleries and museums using Google Places API based on user's current coordinates.",
                "security": [
                {
                    "bearerAuth": []
                }
                ],
                "parameters": [
                    {
                        "name": "lat",
                        "in": "query",
                        "description": "Latitude of the user's location",
                        "required": true,
                        "schema": {
                        "type": "string",
                        "example": "48.8566"
                        }
                    },
                    {
                        "name": "lng",
                        "in": "query",
                        "description": "Longitude of the user's location",
                        "required": true,
                        "schema": {
                        "type": "string",
                        "example": "2.3522"
                        }
                    },
                    {
                        "name": "radius",
                        "in": "query",
                        "description": "Search radius in meters (default: 5000)",
                        "required": false,
                        "schema": {
                        "type": "integer",
                        "example": 5000
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of nearby exhibitions",
                        "content": {
                        "application/json": {
                            "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Louvre Museum"
                                    },
                                    "place_id": {
                                        "type": "string",
                                        "example": "ChIJD3uTd9hx5kcR1IQvGfr8dbk"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "75001 Paris, France"
                                    },
                                    "latitude": {
                                        "type": "number",
                                        "example": 48.8606
                                    },
                                    "longitude": {
                                        "type": "number",
                                        "example": 2.3376
                                    },
                                    "directions_link": {
                                        "type": "string",
                                        "example": "https://www.google.com/maps/dir/?api=1&destination=48.8606111,2.337644&origin=48.8606,2.3376"
                                    },
                                    "gmaps": {
                                        "type": "string",
                                        "example": "https://maps.google.com/?cid=13363865620386383060"
                                    },
                                    "rating": {
                                        "type": "number",
                                        "example": 4.7
                                    },
                                    "summary":{
                                        "type": "object",
                                        "properties":{
                                            "languageCode":{
                                                "type": "string",
                                                "example": "en"
                                            },
                                            "text":{
                                                "type": "string",
                                                "example": "Former historic palace housing huge art collection, from Roman sculptures to da Vinci's \"Mona Lisa.\""
                                            }
                                        }
                                    },
                                    "website":{
                                        "type": "string",
                                        "example": "https://www.louvre.fr/"
                                    }
                                
                                }
                            }
                            }
                        }
                        }
                    },
                    "400": {
                        "description": "Missing or invalid latitude or longitude"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Server error or external API failure"
                    }
                    
                }
            }
        }
    }
}